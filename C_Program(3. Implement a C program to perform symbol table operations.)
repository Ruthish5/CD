#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX 100

struct Symbol {
    char name[50];
    char type[20];
    int size;
    char scope[20];
};

struct Symbol table[MAX];
int count = 0;

void insert() {
    char name[50], type[20], scope[20];
    int size;

    printf("Enter name: ");
    scanf("%s", name);

    for (int i = 0; i < count; i++) {
        if (strcmp(table[i].name, name) == 0) {
            printf("Symbol already exists!\n");
            return;
        }
    }

    printf("Enter type: ");
    scanf("%s", type);
    printf("Enter size: ");
    scanf("%d", &size);
    printf("Enter scope: ");
    scanf("%s", scope);

    strcpy(table[count].name, name);
    strcpy(table[count].type, type);
    table[count].size = size;
    strcpy(table[count].scope, scope);

    count++;
    printf("Symbol inserted successfully.\n");
}

void search() {
    char name[50];
    printf("Enter name to search: ");
    scanf("%s", name);

    for (int i = 0; i < count; i++) {
        if (strcmp(table[i].name, name) == 0) {
            printf("Symbol found:\n");
            printf("Name: %s, Type: %s, Size: %d, Scope: %s\n",
                   table[i].name, table[i].type, table[i].size, table[i].scope);
            return;
        }
    }
    printf("Symbol not found.\n");
}

void delete() {
    char name[50];
    printf("Enter name to delete: ");
    scanf("%s", name);

    for (int i = 0; i < count; i++) {
        if (strcmp(table[i].name, name) == 0) {
            for (int j = i; j < count - 1; j++) {
                table[j] = table[j + 1];
            }
            count--;
            printf("Symbol deleted successfully.\n");
            return;
        }
    }
    printf("Symbol not found.\n");
}

void display() {
    if (count == 0) {
        printf("Symbol table is empty.\n");
        return;
    }

    printf("\n%-15s %-10s %-10s %-10s\n", "Name", "Type", "Size", "Scope");
    for (int i = 0; i < count; i++) {
        printf("%-15s %-10s %-10d %-10s\n",
               table[i].name, table[i].type, table[i].size, table[i].scope);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\nSymbol Table Operations\n");
        printf("1. Insert\n2. Search\n3. Delete\n4. Display\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: insert(); break;
            case 2: search(); break;
            case 3: delete(); break;
            case 4: display(); break;
            case 5: exit(0);
            default: printf("Invalid choice!\n");
        }
    }

    return 0;
}
